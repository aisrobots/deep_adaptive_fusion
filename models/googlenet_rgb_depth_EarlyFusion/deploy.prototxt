name: "GoogleNet"
input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input: "data_NET2"
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input: "rois"
input_shape {
  dim: 1 # to be changed on-the-fly to num ROIs
  dim: 5 # [batch ind, x1, y1, x2, y2] zero-based indexing
}
input: "labels"
input_shape {
  dim: 1 # to be changed on-the-fly to num ROIs
}

layer {
  name: "fusion_point"
  bottom: "data"
  bottom: "data_NET2"
  top: "fusion_point"
  type: "Concat"
  concat_param {
    concat_dim: 1
  }
}

###########################################
# BRANCH LEFT
###########################################
layer {
  name: "conv1/7x7_s2_NET1"
  type: "Convolution"
  bottom: "fusion_point"
  top: "conv1/7x7_s2_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv1/relu_7x7_NET1"
  type: "ReLU"
  bottom: "conv1/7x7_s2_NET1"
  top: "conv1/7x7_s2_NET1"
}
layer {
  name: "pool1/3x3_s2_NET1"
  type: "Pooling"
  bottom: "conv1/7x7_s2_NET1"
  top: "pool1/3x3_s2_NET1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "pool1/norm1_NET1"
  type: "LRN"
  bottom: "pool1/3x3_s2_NET1"
  top: "pool1/norm1_NET1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2/3x3_reduce_NET1"
  type: "Convolution"
  bottom: "pool1/norm1_NET1"
  top: "conv2/3x3_reduce_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv2/relu_3x3_reduce_NET1"
  type: "ReLU"
  bottom: "conv2/3x3_reduce_NET1"
  top: "conv2/3x3_reduce_NET1"
}
layer {
  name: "conv2/3x3_NET1"
  type: "Convolution"
  bottom: "conv2/3x3_reduce_NET1"
  top: "conv2/3x3_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv2/relu_3x3_NET1"
  type: "ReLU"
  bottom: "conv2/3x3_NET1"
  top: "conv2/3x3_NET1"
}
layer {
  name: "conv2/norm2_NET1"
  type: "LRN"
  bottom: "conv2/3x3_NET1"
  top: "conv2/norm2_NET1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2/3x3_s2_NET1"
  type: "Pooling"
  bottom: "conv2/norm2_NET1"
  top: "pool2/3x3_s2_NET1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_3a/1x1_NET1"
  type: "Convolution"
  bottom: "pool2/3x3_s2_NET1"
  top: "inception_3a/1x1_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_1x1_NET1"
  type: "ReLU"
  bottom: "inception_3a/1x1_NET1"
  top: "inception_3a/1x1_NET1"
}
layer {
  name: "inception_3a/3x3_reduce_NET1"
  type: "Convolution"
  bottom: "pool2/3x3_s2_NET1"
  top: "inception_3a/3x3_reduce_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_3x3_reduce_NET1"
  type: "ReLU"
  bottom: "inception_3a/3x3_reduce_NET1"
  top: "inception_3a/3x3_reduce_NET1"
}
layer {
  name: "inception_3a/3x3_NET1"
  type: "Convolution"
  bottom: "inception_3a/3x3_reduce_NET1"
  top: "inception_3a/3x3_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_3x3_NET1"
  type: "ReLU"
  bottom: "inception_3a/3x3_NET1"
  top: "inception_3a/3x3_NET1"
}
layer {
  name: "inception_3a/5x5_reduce_NET1"
  type: "Convolution"
  bottom: "pool2/3x3_s2_NET1"
  top: "inception_3a/5x5_reduce_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_5x5_reduce_NET1"
  type: "ReLU"
  bottom: "inception_3a/5x5_reduce_NET1"
  top: "inception_3a/5x5_reduce_NET1"
}
layer {
  name: "inception_3a/5x5_NET1"
  type: "Convolution"
  bottom: "inception_3a/5x5_reduce_NET1"
  top: "inception_3a/5x5_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_5x5_NET1"
  type: "ReLU"
  bottom: "inception_3a/5x5_NET1"
  top: "inception_3a/5x5_NET1"
}
layer {
  name: "inception_3a/pool_NET1"
  type: "Pooling"
  bottom: "pool2/3x3_s2_NET1"
  top: "inception_3a/pool_NET1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3a/pool_proj_NET1"
  type: "Convolution"
  bottom: "inception_3a/pool_NET1"
  top: "inception_3a/pool_proj_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_pool_proj_NET1"
  type: "ReLU"
  bottom: "inception_3a/pool_proj_NET1"
  top: "inception_3a/pool_proj_NET1"
}
layer {
  name: "inception_3a/output_NET1"
  type: "Concat"
  bottom: "inception_3a/1x1_NET1"
  bottom: "inception_3a/3x3_NET1"
  bottom: "inception_3a/5x5_NET1"
  bottom: "inception_3a/pool_proj_NET1"
  top: "inception_3a/output_NET1"
}
layer {
  name: "inception_3b/1x1_NET1"
  type: "Convolution"
  bottom: "inception_3a/output_NET1"
  top: "inception_3b/1x1_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_1x1_NET1"
  type: "ReLU"
  bottom: "inception_3b/1x1_NET1"
  top: "inception_3b/1x1_NET1"
}
layer {
  name: "inception_3b/3x3_reduce_NET1"
  type: "Convolution"
  bottom: "inception_3a/output_NET1"
  top: "inception_3b/3x3_reduce_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_3x3_reduce_NET1"
  type: "ReLU"
  bottom: "inception_3b/3x3_reduce_NET1"
  top: "inception_3b/3x3_reduce_NET1"
}
layer {
  name: "inception_3b/3x3_NET1"
  type: "Convolution"
  bottom: "inception_3b/3x3_reduce_NET1"
  top: "inception_3b/3x3_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_3x3_NET1"
  type: "ReLU"
  bottom: "inception_3b/3x3_NET1"
  top: "inception_3b/3x3_NET1"
}
layer {
  name: "inception_3b/5x5_reduce_NET1"
  type: "Convolution"
  bottom: "inception_3a/output_NET1"
  top: "inception_3b/5x5_reduce_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_5x5_reduce_NET1"
  type: "ReLU"
  bottom: "inception_3b/5x5_reduce_NET1"
  top: "inception_3b/5x5_reduce_NET1"
}
layer {
  name: "inception_3b/5x5_NET1"
  type: "Convolution"
  bottom: "inception_3b/5x5_reduce_NET1"
  top: "inception_3b/5x5_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_5x5_NET1"
  type: "ReLU"
  bottom: "inception_3b/5x5_NET1"
  top: "inception_3b/5x5_NET1"
}
layer {
  name: "inception_3b/pool_NET1"
  type: "Pooling"
  bottom: "inception_3a/output_NET1"
  top: "inception_3b/pool_NET1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3b/pool_proj_NET1"
  type: "Convolution"
  bottom: "inception_3b/pool_NET1"
  top: "inception_3b/pool_proj_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_pool_proj_NET1"
  type: "ReLU"
  bottom: "inception_3b/pool_proj_NET1"
  top: "inception_3b/pool_proj_NET1"
}
layer {
  name: "inception_3b/output_NET1"
  type: "Concat"
  bottom: "inception_3b/1x1_NET1"
  bottom: "inception_3b/3x3_NET1"
  bottom: "inception_3b/5x5_NET1"
  bottom: "inception_3b/pool_proj_NET1"
  top: "inception_3b/output_NET1"
}
layer {
  name: "pool3/3x3_s2_NET1"
  type: "Pooling"
  bottom: "inception_3b/output_NET1"
  top: "pool3/3x3_s2_NET1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "inception_4a/1x1_NET1"
  type: "Convolution"
  bottom: "pool3/3x3_s2_NET1"
  top: "inception_4a/1x1_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_1x1_NET1"
  type: "ReLU"
  bottom: "inception_4a/1x1_NET1"
  top: "inception_4a/1x1_NET1"
}
layer {
  name: "inception_4a/3x3_reduce_NET1"
  type: "Convolution"
  bottom: "pool3/3x3_s2_NET1"
  top: "inception_4a/3x3_reduce_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_3x3_reduce_NET1"
  type: "ReLU"
  bottom: "inception_4a/3x3_reduce_NET1"
  top: "inception_4a/3x3_reduce_NET1"
}
layer {
  name: "inception_4a/3x3_NET1"
  type: "Convolution"
  bottom: "inception_4a/3x3_reduce_NET1"
  top: "inception_4a/3x3_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 208
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_3x3_NET1"
  type: "ReLU"
  bottom: "inception_4a/3x3_NET1"
  top: "inception_4a/3x3_NET1"
}
layer {
  name: "inception_4a/5x5_reduce_NET1"
  type: "Convolution"
  bottom: "pool3/3x3_s2_NET1"
  top: "inception_4a/5x5_reduce_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_5x5_reduce_NET1"
  type: "ReLU"
  bottom: "inception_4a/5x5_reduce_NET1"
  top: "inception_4a/5x5_reduce_NET1"
}
layer {
  name: "inception_4a/5x5_NET1"
  type: "Convolution"
  bottom: "inception_4a/5x5_reduce_NET1"
  top: "inception_4a/5x5_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 48
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_5x5_NET1"
  type: "ReLU"
  bottom: "inception_4a/5x5_NET1"
  top: "inception_4a/5x5_NET1"
}
layer {
  name: "inception_4a/pool_NET1"
  type: "Pooling"
  bottom: "pool3/3x3_s2_NET1"
  top: "inception_4a/pool_NET1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4a/pool_proj_NET1"
  type: "Convolution"
  bottom: "inception_4a/pool_NET1"
  top: "inception_4a/pool_proj_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_pool_proj__NET1"
  type: "ReLU"
  bottom: "inception_4a/pool_proj_NET1"
  top: "inception_4a/pool_proj_NET1"
}
layer {
  name: "inception_4a/output_NET1"
  type: "Concat"
  bottom: "inception_4a/1x1_NET1"
  bottom: "inception_4a/3x3_NET1"
  bottom: "inception_4a/5x5_NET1"
  bottom: "inception_4a/pool_proj_NET1"
  top: "inception_4a/output_NET1"
}
# layer {
#   name: "loss1/ave_pool_roi_NET1"
#   type: "Pooling"
#   bottom: "inception_4a/output_NET1"
#   top: "loss1/ave_pool_roi_NET1"
#   pooling_param {
#     pool: AVE
#     kernel_size: 5
#     stride: 3
#   }
# }


layer {
  name: "loss1/ave_pool_roi_NET1"
  type: "ROIPooling"
  bottom: "inception_4a/output_NET1"
  bottom: "rois"
  top: "loss1/ave_pool_roi_NET1"
  roi_pooling_param {
    pooled_w: 6
    pooled_h: 6
    spatial_scale: 0.0625 # 1/16
  }
}

layer {
  name: "loss1/conv_scratch_NET1"
  type: "Convolution"
  bottom: "loss1/ave_pool_roi_NET1"
  top: "loss1/conv_scratch_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}



layer {
  name: "loss1/relu_conv_scratch_NET1"
  type: "ReLU"
  bottom: "loss1/conv_scratch_NET1"
  top: "loss1/conv_scratch_NET1"
}
layer {
  name: "loss1/fc_scratch_NET1"
  type: "InnerProduct"
  bottom: "loss1/conv_scratch_NET1"
  top: "loss1/fc_scratch_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
      std: 0.02
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "loss1/relu_fc_scratch_NET1"
  type: "ReLU"
  bottom: "loss1/fc_scratch_NET1"
  top: "loss1/fc_scratch_NET1"
}
layer {
  name: "loss1/drop_fc_scratch_NET1"
  type: "Dropout"
  bottom: "loss1/fc_scratch_NET1"
  top: "loss1/fc_scratch_NET1"
  dropout_param {
    dropout_ratio: 0.7
  }
}


layer {
  name: "bbox_pred_NET1"
  type: "InnerProduct"
  bottom: "loss1/fc_scratch_NET1"
  top: "bbox_pred_NET1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}





layer {
  name: "ip2_gate"
  type: "InnerProduct"
  bottom: "loss1/fc_scratch_NET1"
  top: "ip2_gate"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "ip2_gate"
  top: "cls_prob"
}
